- if !comment.nil?
  - alpha_children = comment.children.dup
  .well
    /-if !comment.parent.nil?
      /p= link_to "^ Inspect parent", show_comment_path(:id => comment.parent_id)
      /p= "show parent"
    b 
      cite= author_link(comment)
      = " said: "
    /br/
    / small.commentmetadata
    / a{:href => "#comment-# comment.id}" title=""

    =' raw comment.body_html

    - if reply_link == true
      a.form_open href="#" Reply?

        
      .hidden_comment_form    
        = form_for(comment.create_child) do |form|

          = form.hidden_field :post_id
          = form.hidden_field :parent_id

          p
            = form.text_field 'author'
            label for="comment_author"
              small
                | Name or
                a href="http://openidexplained.com/" Open
                | (required)
          p
            = form.text_area 'body'
            br/
            small
              | (
              a href="http://lesstile.rubyforge.org"
              | \- surround code blocks with ---)
          p= submit_tag "Add Comment"
        
      / p= link_to "Zoom to ", tree_path(:model_name => @abstract_model.to_param.to_s, :id => comment)
      
      /b = "depth of current tree: #{level.to_s}, children: #{comment.children.length.to_s}"
      
      - comment.children.each do |comment|
        = render :partial => 'comments/comment', :locals => {:comment => comment, :level => level + 1, :reply_link => true}
